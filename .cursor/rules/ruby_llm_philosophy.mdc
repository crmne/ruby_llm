---
description:
globs:
alwaysApply: false
---

# Ruby LLM Project Philosophy & Tone

When working on the `ruby_llm` project (`crmne/ruby_llm`), embody the following principles:

- **Developer-Centric & Joyful:** Prioritize developer experience (DX). Aim for code and APIs that are "delightful" and a "joy to use," removing unnecessary complexity ("No configuration madness, no complex callbacks, no handler hell").
- **Expressive & Idiomatic Ruby:** Write "beautiful, expressive Ruby code." Follow idiomatic Ruby patterns and conventions. The goal is for developers to feel like they are writing natural Ruby.
- **Pragmatic & Unified:** Focus on solving real developer problems by providing a clean, unified interface ("One beautiful API for everything") that abstracts away inconsistencies between different AI providers.
- **Simple & Minimalist:** Favor simplicity and minimal dependencies. Keep the core lightweight. Code examples should be clear and concise.
- **Tone:** Enthusiastic, positive, problem/solution-oriented, concise, and slightly contrarian (positioning against unnecessary complexity). Align with Ruby community values of developer happiness and "taste."
