---
http_interactions:
- request:
    method: post
    uri: "<OLLAMA_API_BASE>/chat/completions"
    body:
      encoding: UTF-8
      string: '{"model":"qwen3","messages":[{"role":"user","content":[{"type":"text","text":"What''s
        in this file?"},{"type":"text","text":"<file name=''ruby.txt'' mime_type=''text/plain''>Ruby
        is the best.</file>"}]}],"stream":false,"temperature":0.7}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Fri, 01 Aug 2025 11:07:55 GMT
      Content-Length:
      - '1090'
    body:
      encoding: UTF-8
      string: '{"id":"chatcmpl-419","object":"chat.completion","created":1754046475,"model":"qwen3","system_fingerprint":"fp_ollama","choices":[{"index":0,"message":{"role":"assistant","content":"\u003cthink\u003e\nOkay,
        the user is asking what''s in the file named ruby.txt. Let me check the information
        provided. The file has a mime type of text/plain, which means it''s a plain
        text file. The content given is \"Ruby is the best.\" So, the file is a simple
        text file containing that exact sentence. I should confirm that there''s no
        additional information or hidden content. Since the user just provided the
        file details, the answer is straightforward. I''ll let them know the file
        contains that sentence and mention the mime type for clarity.\n\u003c/think\u003e\n\nThe
        file `ruby.txt` contains the following text:\n\n```\nRuby is the best.\n```\n\nIt
        is a plain text file ( MIME type: `text/plain` ), so there are no binary or
        encoded data in it. The content is simply the sentence \"Ruby is the best.\""},"finish_reason":"stop"}],"usage":{"prompt_tokens":34,"completion_tokens":173,"total_tokens":207}}

        '
  recorded_at: Fri, 01 Aug 2025 11:07:55 GMT
- request:
    method: post
    uri: "<OLLAMA_API_BASE>/chat/completions"
    body:
      encoding: UTF-8
      string: '{"model":"qwen3","messages":[{"role":"user","content":[{"type":"text","text":"What''s
        in this file?"},{"type":"text","text":"<file name=''ruby.txt'' mime_type=''text/plain''>Ruby
        is the best.</file>"}]},{"role":"assistant","content":"<think>\nOkay, the
        user is asking what''s in the file named ruby.txt. Let me check the information
        provided. The file has a mime type of text/plain, which means it''s a plain
        text file. The content given is \"Ruby is the best.\" So, the file is a simple
        text file containing that exact sentence. I should confirm that there''s no
        additional information or hidden content. Since the user just provided the
        file details, the answer is straightforward. I''ll let them know the file
        contains that sentence and mention the mime type for clarity.\n</think>\n\nThe
        file `ruby.txt` contains the following text:\n\n```\nRuby is the best.\n```\n\nIt
        is a plain text file ( MIME type: `text/plain` ), so there are no binary or
        encoded data in it. The content is simply the sentence \"Ruby is the best.\""},{"role":"user","content":[{"type":"text","text":"and
        in this one?"},{"type":"text","text":"<file name=''ruby.xml'' mime_type=''application/xml''><truism>Ruby
        is the best</truism></file>"}]}],"stream":false,"temperature":0.7}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Fri, 01 Aug 2025 11:08:01 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"id":"chatcmpl-251","object":"chat.completion","created":1754046481,"model":"qwen3","system_fingerprint":"fp_ollama","choices":[{"index":0,"message":{"role":"assistant","content":"\u003cthink\u003e\nOkay,
        the user is asking about the contents of another file called ruby.xml. Let
        me check the previous interaction to see the context.\n\nIn the first query,
        they provided a ruby.txt file with the text \"Ruby is the best.\" and I explained
        that it''s a plain text file. Now, the new file is ruby.xml with MIME type
        application/xml and content \u003ctruism\u003eRuby is the best\u003c/truism\u003e.\n\nFirst,
        I need to confirm the MIME type is XML. The file is an XML document, but it''s
        not well-formed because the \u003ctruism\u003e tag isn''t closed. The original
        content is \"Ruby is the best\" inside the tag. Wait, the user wrote \u003ctruism\u003eRuby
        is the best\u003c/truism\u003e, so the tags are properly closed. Wait, no,
        the user''s input shows \u003ctruism\u003eRuby is the best\u003c/truism\u003e,
        which is correct. Wait, but in their previous example, the user had \u003cfile
        name=''ruby.xml'' mime_type=''application/xml''\u003e\u003ctruism\u003eRuby
        is the best\u003c/truism\u003e\u003c/file\u003e. So the XML content is a single
        \u003ctruism\u003e tag with the text inside, and the closing tag. So the XML
        is valid.\n\nWait, but the user might have made a typo. Let me check again.
        The user''s input is: \u003cfile name=''ruby.xml'' mime_type=''application/xml''\u003e\u003ctruism\u003eRuby
        is the best\u003c/truism\u003e\u003c/file\u003e. So the XML content is \u003ctruism\u003eRuby
        is the best\u003c/truism\u003e, which is correct. So the XML is well-formed.
        However, the \u003ctruism\u003e element isn''t a standard XML element, but
        since it''s user-defined, it''s okay.\n\nSo the answer should state that the
        file is an XML file with a \u003ctruism\u003e element containing \"Ruby is
        the best\". Also, note that the XML is valid, but the element isn''t standard.
        Maybe the user is <GPUSTACK_API_KEY>ing if I can recognize XML structure and
        point out any issues, but in this case, the XML is correctly formed. I should
        mention the MIME type, the structure, and the content. Also, note that the
        text is the same as in the previous file, just wrapped in XML tags. The user
        might be checking if I can differentiate between text and XML files, or if
        there''s any hidden content. But since the XML is properly formed, the answer
        should be straightforward.\n\u003c/think\u003e\n\nThe file `ruby.xml` contains
        the following XML content:\n\n```xml\n\u003ctruism\u003eRuby is the best\u003c/truism\u003e\n```\n\n###
        Key details:\n- **MIME type**: `application/xml` (indicating it''s an XML
        file).\n- **Structure**: A single `\u003ctruism\u003e` element with the text
        \"Ruby is the best\" as its content.\n- **Validation**: The XML is well-formed
        (properly opened and closed tags), though the `\u003ctruism\u003e` element
        is not a standard XML tag (it''s likely a custom or placeholder element).\n\nThe
        content is identical to the text in `ruby.txt`, but it''s wrapped in XML tags."},"finish_reason":"stop"}],"usage":{"prompt_tokens":133,"completion_tokens":634,"total_tokens":767}}

        '
  recorded_at: Fri, 01 Aug 2025 11:08:01 GMT
recorded_with: VCR 6.3.1
