---
http_interactions:
- request:
    method: get
    uri: https://api.anthropic.com/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      X-Api-Key:
      - "<ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:14 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Request-Id:
      - "<REQUEST_ID>"
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - "<ANTHROPIC_ORGANIZATION_ID>"
      X-Envoy-Upstream-Service-Time:
      - '22'
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: '{"data":[{"type":"model","id":"claude-opus-4-1-20250805","display_name":"Claude
        Opus 4.1","created_at":"2025-08-05T00:00:00Z"},{"type":"model","id":"claude-opus-4-20250514","display_name":"Claude
        Opus 4","created_at":"2025-05-22T00:00:00Z"},{"type":"model","id":"claude-sonnet-4-20250514","display_name":"Claude
        Sonnet 4","created_at":"2025-05-22T00:00:00Z"},{"type":"model","id":"claude-3-7-sonnet-20250219","display_name":"Claude
        Sonnet 3.7","created_at":"2025-02-24T00:00:00Z"},{"type":"model","id":"claude-3-5-sonnet-20241022","display_name":"Claude
        Sonnet 3.5 (New)","created_at":"2024-10-22T00:00:00Z"},{"type":"model","id":"claude-3-5-haiku-20241022","display_name":"Claude
        Haiku 3.5","created_at":"2024-10-22T00:00:00Z"},{"type":"model","id":"claude-3-5-sonnet-20240620","display_name":"Claude
        Sonnet 3.5 (Old)","created_at":"2024-06-20T00:00:00Z"},{"type":"model","id":"claude-3-haiku-20240307","display_name":"Claude
        Haiku 3","created_at":"2024-03-07T00:00:00Z"},{"type":"model","id":"claude-3-opus-20240229","display_name":"Claude
        Opus 3","created_at":"2024-02-29T00:00:00Z"}],"has_more":false,"first_id":"claude-opus-4-1-20250805","last_id":"claude-3-opus-20240229"}'
  recorded_at: Wed, 20 Aug 2025 17:14:14 GMT
- request:
    method: get
    uri: https://bedrock.<AWS_REGION>.amazonaws.com/foundation-models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Host:
      - bedrock.<AWS_REGION>.amazonaws.com
      X-Amz-Date:
      - 20250820T171414Z
      X-Amz-Content-Sha256:
      - e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      Authorization:
      - AWS4-HMAC-SHA256 Credential=<AWS_ACCESS_KEY_ID>/20250820/<AWS_REGION>/bedrock/aws4_request,
        SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=98053a31e59ce987e4675c1161bc81c8f820194b7c0a5da135039491e25b5cf8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:14 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '70824'
      Connection:
      - keep-alive
      X-Amzn-Requestid:
      - 8f1f0e08-560e-4517-9e3e-835c20a95dc1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJtb2RlbFN1bW1hcmllcyI6W3siYmF0Y2hTdXBwb3J0ZWQiOnsiYmFzZU1vZGVsU3VwcG9ydGVkIjp0cnVlLCJjcm9zc1JlZ2lvblN1cHBvcnRlZCI6ZmFsc2UsImN1c3RvbU1vZGVsU3VwcG9ydGVkIjpmYWxzZX0sImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOnsiYWRkaXRpb25hbFJlcXVlc3RGaWVsZHNTY2hlbWEiOm51bGwsIm1heFRva2Vuc0RlZmF1bHQiOjQwOTYsIm1heFRva2Vuc01heGltdW0iOjEyODAwMCwicmVhc29uaW5nU3VwcG9ydGVkIjp7ImVtYmVkZGVkIjpmYWxzZX0sInN0b3BTZXF1ZW5jZXNEZWZhdWx0IjpudWxsLCJzeXN0ZW1Sb2xlU3VwcG9ydGVkIjp0cnVlLCJ1c2VyRG9jdW1lbnRUeXBlc1N1cHBvcnRlZCI6bnVsbCwidXNlckltYWdlVHlwZXNTdXBwb3J0ZWQiOltdLCJ1c2VyVmlkZW9UeXBlc1N1cHBvcnRlZCI6W119LCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOnsicHJvbXB0T3B0aW1pemF0aW9uIjpmYWxzZX0sImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6ZmFsc2UsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9vcGVuYWkuZ3B0LW9zcy0xMjBiLTE6MCIsIm1vZGVsRmFtaWx5IjoiR1BUIE9TUyIsIm1vZGVsSWQiOiJvcGVuYWkuZ3B0LW9zcy0xMjBiLTE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJncHQtb3NzLTEyMGIiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiT3BlbkFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOnsiYmFzZU1vZGVsU3VwcG9ydGVkIjp0cnVlLCJjcm9zc1JlZ2lvblN1cHBvcnRlZCI6ZmFsc2UsImN1c3RvbU1vZGVsU3VwcG9ydGVkIjpmYWxzZX0sImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOnsiYWRkaXRpb25hbFJlcXVlc3RGaWVsZHNTY2hlbWEiOm51bGwsIm1heFRva2Vuc0RlZmF1bHQiOjQwOTYsIm1heFRva2Vuc01heGltdW0iOjEyODAwMCwicmVhc29uaW5nU3VwcG9ydGVkIjp7ImVtYmVkZGVkIjpmYWxzZX0sInN0b3BTZXF1ZW5jZXNEZWZhdWx0IjpudWxsLCJzeXN0ZW1Sb2xlU3VwcG9ydGVkIjp0cnVlLCJ1c2VyRG9jdW1lbnRUeXBlc1N1cHBvcnRlZCI6bnVsbCwidXNlckltYWdlVHlwZXNTdXBwb3J0ZWQiOltdLCJ1c2VyVmlkZW9UeXBlc1N1cHBvcnRlZCI6W119LCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOnsicHJvbXB0T3B0aW1pemF0aW9uIjpmYWxzZX0sImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6ZmFsc2UsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9vcGVuYWkuZ3B0LW9zcy0yMGItMTowIiwibW9kZWxGYW1pbHkiOiJHUFQgT1NTIiwibW9kZWxJZCI6Im9wZW5haS5ncHQtb3NzLTIwYi0xOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiZ3B0LW9zcy0yMGIiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiT3BlbkFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOnsiYmFzZU1vZGVsU3VwcG9ydGVkIjpmYWxzZSwiY3Jvc3NSZWdpb25TdXBwb3J0ZWQiOmZhbHNlLCJjdXN0b21Nb2RlbFN1cHBvcnRlZCI6ZmFsc2V9LCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjp7ImFkZGl0aW9uYWxSZXF1ZXN0RmllbGRzU2NoZW1hIjoie1widG9wS1wiOntcInR5cGVcIjpcIm51bWJlclwiLFwiZGVmYXVsdFwiOjI1MCxcIm1pbmltdW1cIjowLFwibWF4aW11bVwiOjUwMH0sXCJyZWFzb25pbmdDb25maWdcIjp7XCJlbmFibGVkXCI6e1widHlwZVwiOlwiYm9vbGVhblwiLFwiZGVmYXVsdFwiOmZhbHNlfSxcImJ1ZGdldFRva2Vuc1wiOntcInR5cGVcIjpcImludGVnZXJcIixcImRlZmF1bHRcIjoyMDQ4LFwibWluaW11bVwiOjEwMjQsXCJtYXhpbXVtXCI6NjM5OTl9fX0iLCJtYXhUb2tlbnNEZWZhdWx0IjoxMDI0LCJtYXhUb2tlbnNNYXhpbXVtIjozMjAwMCwicmVhc29uaW5nU3VwcG9ydGVkIjp7ImVtYmVkZGVkIjpmYWxzZX0sInN0b3BTZXF1ZW5jZXNEZWZhdWx0IjpudWxsLCJzeXN0ZW1Sb2xlU3VwcG9ydGVkIjp0cnVlLCJ1c2VyRG9jdW1lbnRUeXBlc1N1cHBvcnRlZCI6bnVsbCwidXNlckltYWdlVHlwZXNTdXBwb3J0ZWQiOlsianBlZyIsInBuZyIsImdpZiIsIndlYnAiXSwidXNlclZpZGVvVHlwZXNTdXBwb3J0ZWQiOm51bGx9LCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjp7ImZ1bGxEZXNjcmlwdGlvbiI6IkNsYXVkZSBPcHVzIDQuMSBpcyBBbnRocm9waWPigJlzIG1vc3QgaW50ZWxsaWdlbnQgbW9kZWwgYW5kIGFuIGluZHVzdHJ5IGxlYWRlciBmb3IgY29kaW5nIGFuZCBhZ2VudCBjYXBhYmlsaXRpZXMsIGVzcGVjaWFsbHkgYWdlbnRpYyBzZWFyY2guIEl0IGV4Y2VscyBmb3IgY3VzdG9tZXJzIG5lZWRpbmcgZnJvbnRpZXIgaW50ZWxsaWdlbmNlOiBBZHZhbmNlZCBjb2Rpbmc6IEluZGVwZW5kZW50bHkgcGxhbiBhbmQgZXhlY3V0ZSBjb21wbGV4IGRldmVsb3BtZW50IHRhc2tzIGVuZC10by1lbmQuIEl0IGFkYXB0cyB0byB5b3VyIHN0eWxlLCB0aG91Z2h0ZnVsbHkgcGxhbnMgYW5kIHBpdm90cywgYW5kIG1haW50YWlucyBoaWdoIGNvZGUgcXVhbGl0eSB0aHJvdWdob3V0LiBMb25nLWhvcml6b24gdGFza3MgYW5kIGNvbXBsZXggcHJvYmxlbSBzb2x2aW5nICh2aXJ0dWFsIGNvbGxhYm9yYXRvcik6IFVubG9jayBuZXcgdXNlIGNhc2VzIGludm9sdmluZyBsb25nLWhvcml6b24gdGFza3MgdGhhdCByZXF1aXJlIG1lbW9yeSwgc3VzdGFpbmVkIHJlYXNvbmluZywgYW5kIGxvbmcgY2hhaW5zIG9mIGFjdGlvbnMuIEFJIGFnZW50czogRW5hYmxlIGFnZW50cyB0byB0YWNrbGUgY29tcGxleCwgbXVsdGktc3RlcCB0YXNrcyB0aGF0IHJlcXVpcmUgcGVhayBhY2N1cmFjeS4gQWdlbnRpYyBzZWFyY2ggYW5kIHJlc2VhcmNoOiBDb25uZWN0IHRvIG11bHRpcGxlIGRhdGEgc291cmNlcyB0byBzeW50aGVzaXplIGNvbXByZWhlbnNpdmUgaW5zaWdodHMgYWNyb3NzIHJlcG9zaXRvcmllcy4gQ29udGVudCBjcmVhdGlvbjogQ3JlYXRlIGh1bWFuLXF1YWxpdHkgY29udGVudCB3aXRoIG5hdHVyYWwgcHJvc2UuIFByb2R1Y2UgbG9uZy1mb3JtIGNyZWF0aXZlIGNvbnRlbnQsIHRlY2huaWNhbCBkb2N1bWVudGF0aW9uLCBtYXJrZXRpbmcgY29weSwgYW5kIGZyb250ZW5kIGRlc2lnbiBtb2NrdXBzLiBNZW1vcnkgYW5kIGNvbnRleHQgbWFuYWdlbWVudDogSW5jb3Jwb3JhdGVzIG1lbW9yeSBjYXBhYmlsaXRpZXMgdGhhdCBhbGxvdyBpdCB0byBlZmZlY3RpdmVseSBzdW1tYXJpemUgYW5kIHJlZmVyZW5jZSBwcmV2aW91cyBpbnRlcmFjdGlvbnMuIiwiaW52b2tlRXhhbXBsZSI6IntcXG5cIm1vZGVsSWRcIjogXCJhbnRocm9waWMuY2xhdWRlLW9wdXMtNC0xLTIwMjUwODA1LXYxOjBcIixcXG5cImNvbnRlbnRUeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxcblwiYWNjZXB0XCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxcblwiYm9keVwiOiB7XFxuXCJhbnRocm9waWNfdmVyc2lvblwiOiBcImJlZHJvY2stMjAyMy0wNS0zMVwiLFxcblwibWF4X3Rva2Vuc1wiOiAyMDAsXFxuXCJtZXNzYWdlc1wiOiBbXFxue1xcblwicm9sZVwiOiBcInVzZXJcIixcXG5cImNvbnRlbnRcIjogW1xcbntcXG5cInR5cGVcIjogXCJpbWFnZVwiLFxcblwic291cmNlXCI6IHtcXG5cInR5cGVcIjogXCJiYXNlNjRcIixcXG5cIm1lZGlhX3R5cGVcIjogXCJpbWFnZS9qcGVnXCIsXFxuXCJkYXRhXCI6IFwiaVZCT1J3Li4uXCJcXG59XFxufSxcXG57XFxuXCJ0eXBlXCI6IFwidGV4dFwiLFxcblwidGV4dFwiOiBcIldoYXQncyBpbiB0aGlzIGltYWdlP1wiXFxufVxcbl1cXG59XFxuXVxcbn1cXG59IiwibWF4Q29udGV4dFdpbmRvdyI6IjIwMGsiLCJtb2RlbEF0dHJpYnV0ZXMiOiJIeWJyaWQgcmVhc29uaW5nLCBleHRlbmRlZCB0aGlua2luZywgZWZmaWNpZW50IGNvZGUgZ2VuZXJhdGlvbiwgZW5oYW5jZWQgdGV4dCBnZW5lcmF0aW9uLCBhZ2VudGljIHNlYXJjaCwgZWZmaWNpZW50IHJlc2VhcmNoLCBjb21wdXRlciB1c2UsIHRvb2wgdXNlLCByZWFsLXRpbWUgc3VwcG9ydCwgdGFzayBlZmZpY2llbmN5LCB0ZXh0IGFuZCBpbWFnZSBpbnB1dHMsIHN0ZWVyaW5nLCBtZW1vcnkuIiwicG9saWN5IjoiUmVmZXIgdG8gRVVMQSBhYm92ZSIsInJlbGVhc2VEYXRlIjoiMjAyNS0wOC0wNVQwNzowMDowMFoiLCJzaG9ydERlc2NyaXB0aW9uIjoiVGhlIG5leHQgZ2VuZXJhdGlvbiBvZiBBbnRocm9waWPigJlzIG1vc3QgcG93ZXJmdWwgbW9kZWwgeWV0LCBDbGF1ZGUgT3B1cyA0LjEgaXMgYW4gaW5kdXN0cnkgbGVhZGVyIGZvciBjb2RpbmcuIEl0IGRlbGl2ZXJzIHN1c3RhaW5lZCBwZXJmb3JtYW5jZSBvbiBsb25nLXJ1bm5pbmcgdGFza3MgdGhhdCByZXF1aXJlIGZvY3VzZWQgZWZmb3J0IGFuZCB0aG91c2FuZHMgb2Ygc3RlcHMsIHNpZ25pZmljYW50bHkgZXhwYW5kaW5nIHdoYXQgQUkgYWdlbnRzIGNhbiBzb2x2ZS4gQ2xhdWRlIE9wdXMgNC4xIGlzIGlkZWFsIGZvciBwb3dlcmluZyBmcm9udGllciBhZ2VudCBwcm9kdWN0cyBhbmQgZmVhdHVyZXMuIiwic3VwcG9ydGVkRm9ybWF0cyI6bnVsbCwic3VwcG9ydGVkTGFuZ3VhZ2VzIjoiRW5nbGlzaCwgRnJlbmNoLCBNb2Rlcm4gU3RhbmRhcmQgQXJhYmljLCBNYW5kYXJpbiBDaGluZXNlLCBIaW5kaSwgU3BhbmlzaCwgUG9ydHVndWVzZSwgS29yZWFuLCBKYXBhbmVzZSwgR2VybWFuLCBSdXNzaWFuLCBQb2xpc2gsIE90aGVyIGxhbmd1YWdlcy4iLCJzdXBwb3J0ZWRVc2VDYXNlcyI6IkNvbXBsZXggYWdlbnRpYyBzeXN0ZW1zLCBtdWx0aS1hZ2VudCBvcmNoZXN0cmF0aW9uLCBhaSBhZ2VudHMsIGFnZW50aWMgc2VhcmNoLCBpbi1kZXB0aCByZXNlYXJjaCwgYWR2YW5jZWQgY29kaW5nLCBleHRlbmRlZCBjb2RpbmcgcHJvamVjdHMsIGFnZW50aWMgc2VhcmNoIHdpdGggcmVhc29uaW5nIGFuZCBzeW50aGVzaXMsIGxvbmctaG9yaXpvbiB0YXNrcywgY29tcGxleCBwcm9ibGVtIHNvbHZpbmcsIGNyb3NzLWZ1bmN0aW9uYWwgd29ya2Zsb3cgb3JjaGVzdHJhdGlvbiwgbG9uZy1mb3JtIGNyZWF0aXZlIGNvbnRlbnQgZ2VuZXJhdGlvbiwgYXV0b25vbW91cyBsZWdhY3kgY29kZWJhc2UgcmVmYWN0b3JpbmcsIGVuZC10by1lbmQgZnVsbC1zdGFjayBkZXZlbG9wbWVudCwgZnJvbnRlbmQgZGVzaWduICYgZGV2ZWxvcG1lbnQsIGNvbXB1dGVyIHVzZSBhbmQgdmlzaW9uIGFwcGxpY2F0aW9ucywgdmlzdWFsIGFuYWx5c2lzLCBkb2N1bWVudCBwcm9jZXNzaW5nLCBtdWx0aS1hcHAgZW52aXJvbm1lbnRzLCBtZW1vcnkgYW5kIGNvbnRleHQgbWFuYWdlbWVudCIsInVuc3VwcG9ydGVkVXNlQ2FzZXMiOm51bGwsInZlcnNpb24iOiJ2MSJ9LCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJmZWF0dXJlc1N1cHBvcnRlZCI6eyJwcm9tcHRPcHRpbWl6YXRpb24iOmZhbHNlfSwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6ZmFsc2UsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLW9wdXMtNC0xLTIwMjUwODA1LXYxOjAiLCJtb2RlbEZhbWlseSI6IkNsYXVkZSA0LjEiLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS1vcHVzLTQtMS0yMDI1MDgwNS12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSBPcHVzIDQuMSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24udGl0YW4tdGcxLWxhcmdlIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24udGl0YW4tdGcxLWxhcmdlIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlRpdGFuIFRleHQgTGFyZ2UiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6dHJ1ZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6W10sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiLCJWSURFTyJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi5ub3ZhLXByZW1pZXItdjE6MDo4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLm5vdmEtcHJlbWllci12MTowOjhrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6Ik5vdmEgUHJlbWllciIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbWF6b24iLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSIsIlZJREVPIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLm5vdmEtcHJlbWllci12MTowOjIwayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLm5vdmEtcHJlbWllci12MTowOjIwayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJOb3ZhIFByZW1pZXIiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6dHJ1ZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6W10sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiLCJWSURFTyJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi5ub3ZhLXByZW1pZXItdjE6MDoxMDAwayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLm5vdmEtcHJlbWllci12MTowOjEwMDBrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6Ik5vdmEgUHJlbWllciIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbWF6b24iLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSIsIlZJREVPIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLm5vdmEtcHJlbWllci12MTowOm1tIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ubm92YS1wcmVtaWVyLXYxOjA6bW0iLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTm92YSBQcmVtaWVyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSIsIlZJREVPIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLm5vdmEtcHJlbWllci12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ubm92YS1wcmVtaWVyLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTm92YSBQcmVtaWVyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOmZhbHNlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24udGl0YW4tZW1iZWQtZzEtdGV4dC0wMiIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLWVtYmVkLWcxLXRleHQtMDIiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gVGV4dCBFbWJlZGRpbmdzIHYyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJFTUJFRERJTkciXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIiwiQ09OVElOVUVEX1BSRV9UUkFJTklORyJdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi50aXRhbi10ZXh0LWxpdGUtdjE6MDo0ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLXRleHQtbGl0ZS12MTowOjRrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlRpdGFuIFRleHQgRzEgLSBMaXRlIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi50aXRhbi10ZXh0LWxpdGUtdjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFtYXpvbi50aXRhbi10ZXh0LWxpdGUtdjEiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gVGV4dCBHMSAtIExpdGUiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIiwiQ09OVElOVUVEX1BSRV9UUkFJTklORyJdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi50aXRhbi10ZXh0LWV4cHJlc3MtdjE6MDo4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLXRleHQtZXhwcmVzcy12MTowOjhrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlRpdGFuIFRleHQgRzEgLSBFeHByZXNzIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi50aXRhbi10ZXh0LWV4cHJlc3MtdjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFtYXpvbi50aXRhbi10ZXh0LWV4cHJlc3MtdjEiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gVGV4dCBHMSAtIEV4cHJlc3MiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6dHJ1ZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJJTkZFUkVOQ0VfUFJPRklMRSJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIiwiVklERU8iXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FtYXpvbi5ub3ZhLXByby12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ubm92YS1wcm8tdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJOb3ZhIFBybyIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbWF6b24iLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiLCJWSURFTyJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLm5vdmEtbGl0ZS12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ubm92YS1saXRlLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTm92YSBMaXRlIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24ubm92YS1taWNyby12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ubm92YS1taWNyby12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6Ik5vdmEgTWljcm8iLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6ZmFsc2UsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnRpdGFuLWVtYmVkLXRleHQtdjE6Mjo4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLWVtYmVkLXRleHQtdjE6Mjo4ayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJUaXRhbiBFbWJlZGRpbmdzIEcxIC0gVGV4dCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiRU1CRURESU5HIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpmYWxzZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjpmYWxzZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnRpdGFuLWVtYmVkLXRleHQtdjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFtYXpvbi50aXRhbi1lbWJlZC10ZXh0LXYxIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlRpdGFuIEVtYmVkZGluZ3MgRzEgLSBUZXh0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJFTUJFRERJTkciXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOmZhbHNlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOmZhbHNlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24udGl0YW4tZW1iZWQtdGV4dC12MjowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24udGl0YW4tZW1iZWQtdGV4dC12MjowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlRpdGFuIFRleHQgRW1iZWRkaW5ncyBWMiIsIm91dHB1dE1vZGFsaXRpZXMiOlsiRU1CRURESU5HIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpmYWxzZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOlsiRklORV9UVU5JTkciXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6ZmFsc2UsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24udGl0YW4tZW1iZWQtaW1hZ2UtdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLWVtYmVkLWltYWdlLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gTXVsdGltb2RhbCBFbWJlZGRpbmdzIEcxIiwib3V0cHV0TW9kYWxpdGllcyI6WyJFTUJFRERJTkciXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6ZmFsc2UsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnRpdGFuLWVtYmVkLWltYWdlLXYxIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24udGl0YW4tZW1iZWQtaW1hZ2UtdjEiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gTXVsdGltb2RhbCBFbWJlZGRpbmdzIEcxIiwib3V0cHV0TW9kYWxpdGllcyI6WyJFTUJFRERJTkciXSwicHJvdmlkZXJOYW1lIjoiQW1hem9uIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIl0sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbWF6b24udGl0YW4taW1hZ2UtZ2VuZXJhdG9yLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFtYXpvbi50aXRhbi1pbWFnZS1nZW5lcmF0b3ItdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJUaXRhbiBJbWFnZSBHZW5lcmF0b3IgRzEiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIklNQUdFIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpudWxsfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnRpdGFuLWltYWdlLWdlbmVyYXRvci12MSIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW1hem9uLnRpdGFuLWltYWdlLWdlbmVyYXRvci12MSIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJUaXRhbiBJbWFnZSBHZW5lcmF0b3IgRzEiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIklNQUdFIl0sInByb3ZpZGVyTmFtZSI6IkFtYXpvbiIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpudWxsfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6WyJGSU5FX1RVTklORyJdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCIsIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnRpdGFuLWltYWdlLWdlbmVyYXRvci12MjowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24udGl0YW4taW1hZ2UtZ2VuZXJhdG9yLXYyOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiVGl0YW4gSW1hZ2UgR2VuZXJhdG9yIEcxIHYyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJJTUFHRSJdLCJwcm92aWRlck5hbWUiOiJBbWF6b24iLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6bnVsbH0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjpmYWxzZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW1hem9uLnJlcmFuay12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbWF6b24ucmVyYW5rLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiUmVyYW5rIDEuMCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbWF6b24iLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6ZmFsc2V9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9zdGFiaWxpdHkuc2QzLWxhcmdlLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6InN0YWJpbGl0eS5zZDMtbGFyZ2UtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkxFR0FDWSJ9LCJtb2RlbE5hbWUiOiJTRDMgTGFyZ2UgMS4wIiwib3V0cHV0TW9kYWxpdGllcyI6WyJJTUFHRSJdLCJwcm92aWRlck5hbWUiOiJTdGFiaWxpdHkgQUkiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6bnVsbH0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL3N0YWJpbGl0eS5zZDMtNS1sYXJnZS12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJzdGFiaWxpdHkuc2QzLTUtbGFyZ2UtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJTdGFibGUgRGlmZnVzaW9uIDMuNSBMYXJnZSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiSU1BR0UiXSwicHJvdmlkZXJOYW1lIjoiU3RhYmlsaXR5IEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvc3RhYmlsaXR5LnN0YWJsZS1pbWFnZS1jb3JlLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6InN0YWJpbGl0eS5zdGFibGUtaW1hZ2UtY29yZS12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiTEVHQUNZIn0sIm1vZGVsTmFtZSI6IlN0YWJsZSBJbWFnZSBDb3JlIDEuMCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiSU1BR0UiXSwicHJvdmlkZXJOYW1lIjoiU3RhYmlsaXR5IEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvc3RhYmlsaXR5LnN0YWJsZS1pbWFnZS1jb3JlLXYxOjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6InN0YWJpbGl0eS5zdGFibGUtaW1hZ2UtY29yZS12MToxIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlN0YWJsZSBJbWFnZSBDb3JlIDEuMCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiSU1BR0UiXSwicHJvdmlkZXJOYW1lIjoiU3RhYmlsaXR5IEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvc3RhYmlsaXR5LnN0YWJsZS1pbWFnZS11bHRyYS12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJzdGFiaWxpdHkuc3RhYmxlLWltYWdlLXVsdHJhLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiU3RhYmxlIEltYWdlIFVsdHJhIDEuMCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiSU1BR0UiXSwicHJvdmlkZXJOYW1lIjoiU3RhYmlsaXR5IEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvc3RhYmlsaXR5LnN0YWJsZS1pbWFnZS11bHRyYS12MToxIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJzdGFiaWxpdHkuc3RhYmxlLWltYWdlLXVsdHJhLXYxOjEiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiU3RhYmxlIEltYWdlIFVsdHJhIDEuMCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiSU1BR0UiXSwicHJvdmlkZXJOYW1lIjoiU3RhYmlsaXR5IEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOm51bGx9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MTAyMi12MjowOjE4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQxMDIyLXYyOjA6MThrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSAzLjUgU29ubmV0IHYyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtNS1zb25uZXQtMjAyNDEwMjItdjI6MDo1MWsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MTAyMi12MjowOjUxayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMy41IFNvbm5ldCB2MiIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQxMDIyLXYyOjA6MjAwayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQxMDIyLXYyOjA6MjAwayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMy41IFNvbm5ldCB2MiIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQxMDIyLXYyOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MTAyMi12MjowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSAzLjUgU29ubmV0IHYyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy03LXNvbm5ldC0yMDI1MDIxOS12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbnRocm9waWMuY2xhdWRlLTMtNy1zb25uZXQtMjAyNTAyMTktdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMy43IFNvbm5ldCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLTUtaGFpa3UtMjAyNDEwMjItdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLTUtaGFpa3UtMjAyNDEwMjItdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMy41IEhhaWt1Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS1pbnN0YW50LXYxOjI6MTAwayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS1pbnN0YW50LXYxOjI6MTAwayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkxFR0FDWSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgSW5zdGFudCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLWluc3RhbnQtdjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtaW5zdGFudC12MSIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkxFR0FDWSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgSW5zdGFudCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtdjI6MDoxOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtdjI6MDoxOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiQ2xhdWRlIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS12MjowOjEwMGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtdjI6MDoxMDBrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiTEVHQUNZIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtdjI6MToxOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtdjI6MToxOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiQ2xhdWRlIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS12MjoxOjIwMGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtdjI6MToyMDBrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiTEVHQUNZIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLXYyOjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtdjI6MSIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkxFR0FDWSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS12MiIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS12MiIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkxFR0FDWSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy1zb25uZXQtMjAyNDAyMjktdjE6MDoyOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy1zb25uZXQtMjAyNDAyMjktdjE6MDoyOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgU29ubmV0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtc29ubmV0LTIwMjQwMjI5LXYxOjA6MjAwayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLXNvbm5ldC0yMDI0MDIyOS12MTowOjIwMGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgU29ubmV0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLXNvbm5ldC0yMDI0MDIyOS12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbnRocm9waWMuY2xhdWRlLTMtc29ubmV0LTIwMjQwMjI5LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJMRUdBQ1kifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgU29ubmV0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MDo0OGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowOjQ4ayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMyBIYWlrdSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOlsiRklORV9UVU5JTkciLCJESVNUSUxMQVRJT04iXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowOjIwMGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowOjIwMGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgSGFpa3UiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMyBIYWlrdSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6W10sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtb3B1cy0yMDI0MDIyOS12MTowOjEyayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLW9wdXMtMjAyNDAyMjktdjE6MDoxMmsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgT3B1cyIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6W10sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtb3B1cy0yMDI0MDIyOS12MTowOjI4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLW9wdXMtMjAyNDAyMjktdjE6MDoyOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMgT3B1cyIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6W10sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtb3B1cy0yMDI0MDIyOS12MTowOjIwMGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy1vcHVzLTIwMjQwMjI5LXYxOjA6MjAwayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMyBPcHVzIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLW9wdXMtMjAyNDAyMjktdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiYW50aHJvcGljLmNsYXVkZS0zLW9wdXMtMjAyNDAyMjktdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMyBPcHVzIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLTMtNS1zb25uZXQtMjAyNDA2MjAtdjE6MDoxOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MDYyMC12MTowOjE4ayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgMy41IFNvbm5ldCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQwNjIwLXYxOjA6NTFrIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJhbnRocm9waWMuY2xhdWRlLTMtNS1zb25uZXQtMjAyNDA2MjAtdjE6MDo1MWsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMuNSBTb25uZXQiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MDYyMC12MTowOjIwMGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MDYyMC12MTowOjIwMGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIDMuNSBTb25uZXQiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIiwiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvYW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQwNjIwLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtMy01LXNvbm5ldC0yMDI0MDYyMC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkNsYXVkZSAzLjUgU29ubmV0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkFudGhyb3BpYyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOnRydWV9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2FudGhyb3BpYy5jbGF1ZGUtb3B1cy00LTIwMjUwNTE0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtb3B1cy00LTIwMjUwNTE0LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ2xhdWRlIE9wdXMgNCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJBbnRocm9waWMiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9hbnRocm9waWMuY2xhdWRlLXNvbm5ldC00LTIwMjUwNTE0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImFudGhyb3BpYy5jbGF1ZGUtc29ubmV0LTQtMjAyNTA1MTQtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDbGF1ZGUgU29ubmV0IDQiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiQW50aHJvcGljIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvY29oZXJlLmNvbW1hbmQtci12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJjb2hlcmUuY29tbWFuZC1yLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiQ29tbWFuZCBSIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkNvaGVyZSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2NvaGVyZS5jb21tYW5kLXItcGx1cy12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJjb2hlcmUuY29tbWFuZC1yLXBsdXMtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJDb21tYW5kIFIrIiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkNvaGVyZSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOmZhbHNlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2NvaGVyZS5lbWJlZC1lbmdsaXNoLXYzOjA6NTEyIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJjb2hlcmUuZW1iZWQtZW5nbGlzaC12MzowOjUxMiIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJFbWJlZCBFbmdsaXNoIiwib3V0cHV0TW9kYWxpdGllcyI6WyJFTUJFRERJTkciXSwicHJvdmlkZXJOYW1lIjoiQ29oZXJlIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOmZhbHNlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOmZhbHNlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9jb2hlcmUuZW1iZWQtZW5nbGlzaC12MyIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiY29oZXJlLmVtYmVkLWVuZ2xpc2gtdjMiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiRW1iZWQgRW5nbGlzaCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiRU1CRURESU5HIl0sInByb3ZpZGVyTmFtZSI6IkNvaGVyZSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpmYWxzZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjpmYWxzZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9jb2hlcmUuZW1iZWQtbXVsdGlsaW5ndWFsLXYzOjA6NTEyIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJjb2hlcmUuZW1iZWQtbXVsdGlsaW5ndWFsLXYzOjA6NTEyIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkVtYmVkIE11bHRpbGluZ3VhbCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiRU1CRURESU5HIl0sInByb3ZpZGVyTmFtZSI6IkNvaGVyZSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpmYWxzZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjpmYWxzZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvY29oZXJlLmVtYmVkLW11bHRpbGluZ3VhbC12MyIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoiY29oZXJlLmVtYmVkLW11bHRpbGluZ3VhbC12MyIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJFbWJlZCBNdWx0aWxpbmd1YWwiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIkVNQkVERElORyJdLCJwcm92aWRlck5hbWUiOiJDb2hlcmUiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6ZmFsc2V9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6ZmFsc2UsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2NvaGVyZS5yZXJhbmstdjMtNTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJjb2hlcmUucmVyYW5rLXYzLTU6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJSZXJhbmsgMy41Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IkNvaGVyZSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjpmYWxzZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJJTkZFUkVOQ0VfUFJPRklMRSJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2RlZXBzZWVrLnIxLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6ImRlZXBzZWVrLnIxLXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiRGVlcFNlZWstUjEiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiRGVlcFNlZWsiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9tZXRhLmxsYW1hMy04Yi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy04Yi1pbnN0cnVjdC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMgOEIgSW5zdHJ1Y3QiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWV0YSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTcwYi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy03MGItaW5zdHJ1Y3QtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJMbGFtYSAzIDcwQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIiwiRElTVElMTEFUSU9OIl0sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWV0YS5sbGFtYTMtMS04Yi1pbnN0cnVjdC12MTowOjEyOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTEtOGItaW5zdHJ1Y3QtdjE6MDoxMjhrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMSA4QiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIiwiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTEtOGItaW5zdHJ1Y3QtdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoibWV0YS5sbGFtYTMtMS04Yi1pbnN0cnVjdC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMSA4QiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIiwiRElTVElMTEFUSU9OIl0sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWV0YS5sbGFtYTMtMS03MGItaW5zdHJ1Y3QtdjE6MDoxMjhrIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy0xLTcwYi1pbnN0cnVjdC12MTowOjEyOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4xIDcwQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIiwiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTEtNzBiLWluc3RydWN0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTEtNzBiLWluc3RydWN0LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4xIDcwQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWV0YS5sbGFtYTMtMS00MDViLWluc3RydWN0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTEtNDA1Yi1pbnN0cnVjdC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMSA0MDVCIEluc3RydWN0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6Ik1ldGEiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOlsiRklORV9UVU5JTkciXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTItMTFiLWluc3RydWN0LXYxOjA6MTI4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoibWV0YS5sbGFtYTMtMi0xMWItaW5zdHJ1Y3QtdjE6MDoxMjhrIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMiAxMUIgSW5zdHJ1Y3QiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWV0YSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTItMTFiLWluc3RydWN0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTItMTFiLWluc3RydWN0LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4yIDExQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbIkZJTkVfVFVOSU5HIl0sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIlBST1ZJU0lPTkVEIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9tZXRhLmxsYW1hMy0yLTkwYi1pbnN0cnVjdC12MTowOjEyOGsiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTItOTBiLWluc3RydWN0LXYxOjA6MTI4ayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJMbGFtYSAzLjIgOTBCIEluc3RydWN0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6Ik1ldGEiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJJTkZFUkVOQ0VfUFJPRklMRSJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCIsIklNQUdFIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6dHJ1ZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9tZXRhLmxsYW1hMy0yLTkwYi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy0yLTkwYi1pbnN0cnVjdC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMiA5MEIgSW5zdHJ1Y3QiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWV0YSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6WyJGSU5FX1RVTklORyIsIkRJU1RJTExBVElPTiJdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJQUk9WSVNJT05FRCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTItMWItaW5zdHJ1Y3QtdjE6MDoxMjhrIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy0yLTFiLWluc3RydWN0LXYxOjA6MTI4ayIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJMbGFtYSAzLjIgMUIgSW5zdHJ1Y3QiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWV0YSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWV0YS5sbGFtYTMtMi0xYi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hMy0yLTFiLWluc3RydWN0LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4yIDFCIEluc3RydWN0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6Ik1ldGEiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOlsiRklORV9UVU5JTkciLCJESVNUSUxMQVRJT04iXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiUFJPVklTSU9ORUQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9tZXRhLmxsYW1hMy0yLTNiLWluc3RydWN0LXYxOjA6MTI4ayIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoibWV0YS5sbGFtYTMtMi0zYi1pbnN0cnVjdC12MTowOjEyOGsiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4yIDNCIEluc3RydWN0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6Ik1ldGEiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJJTkZFUkVOQ0VfUFJPRklMRSJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTItM2ItaW5zdHJ1Y3QtdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoibWV0YS5sbGFtYTMtMi0zYi1pbnN0cnVjdC12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IkxsYW1hIDMuMiAzQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjp0cnVlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWEzLTMtNzBiLWluc3RydWN0LXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1ldGEubGxhbWEzLTMtNzBiLWluc3RydWN0LXYxOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTGxhbWEgMy4zIDcwQiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWE0LXNjb3V0LTE3Yi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hNC1zY291dC0xN2ItaW5zdHJ1Y3QtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJMbGFtYSA0IFNjb3V0IDE3QiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiSU5GRVJFTkNFX1BST0ZJTEUiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiLCJJTUFHRSJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21ldGEubGxhbWE0LW1hdmVyaWNrLTE3Yi1pbnN0cnVjdC12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtZXRhLmxsYW1hNC1tYXZlcmljay0xN2ItaW5zdHJ1Y3QtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJMbGFtYSA0IE1hdmVyaWNrIDE3QiBJbnN0cnVjdCIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNZXRhIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWlzdHJhbC5taXN0cmFsLTdiLWluc3RydWN0LXYwOjIiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1pc3RyYWwubWlzdHJhbC03Yi1pbnN0cnVjdC12MDoyIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6Ik1pc3RyYWwgN0IgSW5zdHJ1Y3QiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWlzdHJhbCBBSSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL21pc3RyYWwubWl4dHJhbC04eDdiLWluc3RydWN0LXYwOjEiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Im1pc3RyYWwubWl4dHJhbC04eDdiLWluc3RydWN0LXYwOjEiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiTWl4dHJhbCA4eDdCIEluc3RydWN0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6Ik1pc3RyYWwgQUkiLCJyZXNwb25zZVN0cmVhbWluZ1N1cHBvcnRlZCI6dHJ1ZX0seyJiYXRjaFN1cHBvcnRlZCI6bnVsbCwiY29uc29sZUlERU1ldGFkYXRhIjpudWxsLCJjb252ZXJzZSI6bnVsbCwiY3VzdG9taXphdGlvbnNTdXBwb3J0ZWQiOltdLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXhwbGljaXRQcm9tcHRDYWNoaW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImZlYXR1cmVzU3VwcG9ydGVkIjpudWxsLCJndWFyZHJhaWxzU3VwcG9ydGVkIjp0cnVlLCJpbmZlcmVuY2VUeXBlc1N1cHBvcnRlZCI6WyJPTl9ERU1BTkQiXSwiaW5wdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9taXN0cmFsLm1pc3RyYWwtbGFyZ2UtMjQwMi12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtaXN0cmFsLm1pc3RyYWwtbGFyZ2UtMjQwMi12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6Ik1pc3RyYWwgTGFyZ2UgKDI0LjAyKSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNaXN0cmFsIEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6dHJ1ZSwiaW5mZXJlbmNlVHlwZXNTdXBwb3J0ZWQiOlsiT05fREVNQU5EIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvbWlzdHJhbC5taXN0cmFsLWxhcmdlLTI0MDctdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoibWlzdHJhbC5taXN0cmFsLWxhcmdlLTI0MDctdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJNaXN0cmFsIExhcmdlICgyNC4wNykiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiTWlzdHJhbCBBSSIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiSU1BR0UiXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC9taXN0cmFsLnBpeHRyYWwtbGFyZ2UtMjUwMi12MTowIiwibW9kZWxGYW1pbHkiOm51bGwsIm1vZGVsSWQiOiJtaXN0cmFsLnBpeHRyYWwtbGFyZ2UtMjUwMi12MTowIiwibW9kZWxMaWZlY3ljbGUiOnsic3RhdHVzIjoiQUNUSVZFIn0sIm1vZGVsTmFtZSI6IlBpeHRyYWwgTGFyZ2UgKDI1LjAyKSIsIm91dHB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJwcm92aWRlck5hbWUiOiJNaXN0cmFsIEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOnRydWV9LHsiYmF0Y2hTdXBwb3J0ZWQiOm51bGwsImNvbnNvbGVJREVNZXRhZGF0YSI6bnVsbCwiY29udmVyc2UiOm51bGwsImN1c3RvbWl6YXRpb25zU3VwcG9ydGVkIjpbXSwiZGVzY3JpcHRpb24iOm51bGwsImV4cGxpY2l0UHJvbXB0Q2FjaGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJmZWF0dXJlc1N1cHBvcnRlZCI6bnVsbCwiZ3VhcmRyYWlsc1N1cHBvcnRlZCI6ZmFsc2UsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIk9OX0RFTUFORCJdLCJpbnB1dE1vZGFsaXRpZXMiOlsiVEVYVCJdLCJpbnRlbGxpZ2VudFByb21wdFJvdXRpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwibGF0ZW5jeU9wdGltaXphdGlvblN1cHBvcnRlZCI6bnVsbCwibW9kZWxBcm4iOiJhcm46YXdzOmJlZHJvY2s6PEFXU19SRUdJT04+Ojpmb3VuZGF0aW9uLW1vZGVsL2x1bWEucmF5LXYyOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6Imx1bWEucmF5LXYyOjAiLCJtb2RlbExpZmVjeWNsZSI6eyJzdGF0dXMiOiJBQ1RJVkUifSwibW9kZWxOYW1lIjoiUmF5IHYyIiwib3V0cHV0TW9kYWxpdGllcyI6WyJWSURFTyJdLCJwcm92aWRlck5hbWUiOiJMdW1hIEFJIiwicmVzcG9uc2VTdHJlYW1pbmdTdXBwb3J0ZWQiOmZhbHNlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvd3JpdGVyLnBhbG15cmEteDQtdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoid3JpdGVyLnBhbG15cmEteDQtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJQYWxteXJhIFg0Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IldyaXRlciIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIl0sImludGVsbGlnZW50UHJvbXB0Um91dGluZyI6eyJpc1N1cHBvcnRlZCI6ZmFsc2V9LCJsYXRlbmN5T3B0aW1pemF0aW9uU3VwcG9ydGVkIjpudWxsLCJtb2RlbEFybiI6ImFybjphd3M6YmVkcm9jazo8QVdTX1JFR0lPTj46OmZvdW5kYXRpb24tbW9kZWwvd3JpdGVyLnBhbG15cmEteDUtdjE6MCIsIm1vZGVsRmFtaWx5IjpudWxsLCJtb2RlbElkIjoid3JpdGVyLnBhbG15cmEteDUtdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJQYWxteXJhIFg1Iiwib3V0cHV0TW9kYWxpdGllcyI6WyJURVhUIl0sInByb3ZpZGVyTmFtZSI6IldyaXRlciIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfSx7ImJhdGNoU3VwcG9ydGVkIjpudWxsLCJjb25zb2xlSURFTWV0YWRhdGEiOm51bGwsImNvbnZlcnNlIjpudWxsLCJjdXN0b21pemF0aW9uc1N1cHBvcnRlZCI6W10sImRlc2NyaXB0aW9uIjpudWxsLCJleHBsaWNpdFByb21wdENhY2hpbmciOnsiaXNTdXBwb3J0ZWQiOmZhbHNlfSwiZmVhdHVyZXNTdXBwb3J0ZWQiOm51bGwsImd1YXJkcmFpbHNTdXBwb3J0ZWQiOnRydWUsImluZmVyZW5jZVR5cGVzU3VwcG9ydGVkIjpbIklORkVSRU5DRV9QUk9GSUxFIl0sImlucHV0TW9kYWxpdGllcyI6WyJURVhUIiwiVklERU8iXSwiaW50ZWxsaWdlbnRQcm9tcHRSb3V0aW5nIjp7ImlzU3VwcG9ydGVkIjpmYWxzZX0sImxhdGVuY3lPcHRpbWl6YXRpb25TdXBwb3J0ZWQiOm51bGwsIm1vZGVsQXJuIjoiYXJuOmF3czpiZWRyb2NrOjxBV1NfUkVHSU9OPjo6Zm91bmRhdGlvbi1tb2RlbC90d2VsdmVsYWJzLnBlZ2FzdXMtMS0yLXYxOjAiLCJtb2RlbEZhbWlseSI6bnVsbCwibW9kZWxJZCI6InR3ZWx2ZWxhYnMucGVnYXN1cy0xLTItdjE6MCIsIm1vZGVsTGlmZWN5Y2xlIjp7InN0YXR1cyI6IkFDVElWRSJ9LCJtb2RlbE5hbWUiOiJQZWdhc3VzIHYxLjIiLCJvdXRwdXRNb2RhbGl0aWVzIjpbIlRFWFQiXSwicHJvdmlkZXJOYW1lIjoiVHdlbHZlTGFicyIsInJlc3BvbnNlU3RyZWFtaW5nU3VwcG9ydGVkIjp0cnVlfV19
  recorded_at: Wed, 20 Aug 2025 17:14:15 GMT
- request:
    method: get
    uri: https://api.deepseek.com/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <DEEPSEEK_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:15 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - origin, access-control-request-method, access-control-request-headers
      Access-Control-Allow-Credentials:
      - 'true'
      X-Ds-Trace-Id:
      - c69d21964a0d542ba5bfffc33732033b
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: '{"object":"list","data":[{"id":"deepseek-chat","object":"model","owned_by":"deepseek"},{"id":"deepseek-reasoner","object":"model","owned_by":"deepseek"}]}'
  recorded_at: Wed, 20 Aug 2025 17:14:15 GMT
- request:
    method: get
    uri: https://generativelanguage.googleapis.com/v1beta/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      X-Goog-Api-Key:
      - "<GEMINI_API_KEY>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Wed, 20 Aug 2025 17:14:15 GMT
      Server:
      - scaffolding on HTTPServer2
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=20
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "models": [
            {
              "name": "models/embedding-gecko-001",
              "version": "001",
              "displayName": "Embedding Gecko",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 1024,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedText",
                "countTextTokens"
              ]
            },
            {
              "name": "models/gemini-1.5-pro-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Pro Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-pro-002",
              "version": "002",
              "displayName": "Gemini 1.5 Pro 002",
              "description": "Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in September of 2024.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-pro",
              "version": "001",
              "displayName": "Gemini 1.5 Pro",
              "description": "Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in May of 2024.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Flash Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash",
              "version": "001",
              "displayName": "Gemini 1.5 Flash",
              "description": "Alias that points to the most recent stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-002",
              "version": "002",
              "displayName": "Gemini 1.5 Flash 002",
              "description": "Stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in September of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B",
              "description": "Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b-001",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B 001",
              "description": "Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.5-pro-preview-03-25",
              "version": "2.5-preview-03-25",
              "displayName": "Gemini 2.5 Pro Preview 03-25",
              "description": "Gemini 2.5 Pro Preview 03-25",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-preview-05-20",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash",
              "version": "001",
              "displayName": "Gemini 2.5 Flash",
              "description": "Stable version of Gemini 2.5 Flash, our mid-size multimodal model that supports up to 1 million tokens, released in June of 2025.",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-lite-preview-06-17",
              "version": "2.5-preview-06-17",
              "displayName": "Gemini 2.5 Flash-Lite Preview 06-17",
              "description": "Preview release (June 11th, 2025) of Gemini 2.5 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro-preview-05-06",
              "version": "2.5-preview-05-06",
              "displayName": "Gemini 2.5 Pro Preview 05-06",
              "description": "Preview release (May 6th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro-preview-06-05",
              "version": "2.5-preview-06-05",
              "displayName": "Gemini 2.5 Pro Preview",
              "description": "Preview release (June 5th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro",
              "version": "2.5",
              "displayName": "Gemini 2.5 Pro",
              "description": "Stable release (June 17th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-exp",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash Experimental",
              "description": "Gemini 2.0 Flash Experimental",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "bidiGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash",
              "description": "Gemini 2.0 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-001",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash 001",
              "description": "Stable version of Gemini 2.0 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in January of 2025.",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-001",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash-Lite 001",
              "description": "Stable version of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash-Lite",
              "description": "Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-preview-02-05",
              "version": "preview-02-05",
              "displayName": "Gemini 2.0 Flash-Lite Preview 02-05",
              "description": "Preview release (February 5th, 2025) of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-preview",
              "version": "preview-02-05",
              "displayName": "Gemini 2.0 Flash-Lite Preview",
              "description": "Preview release (February 5th, 2025) of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-pro-exp",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini 2.0 Pro Experimental",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-pro-exp-02-05",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini 2.0 Pro Experimental 02-05",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-exp-1206",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini Experimental 1206",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp-01-21",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp-1219",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-preview-tts",
              "version": "gemini-2.5-flash-exp-tts-2025-05-19",
              "displayName": "Gemini 2.5 Flash Preview TTS",
              "description": "Gemini 2.5 Flash Preview TTS",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 16384,
              "supportedGenerationMethods": [
                "countTokens",
                "generateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.5-pro-preview-tts",
              "version": "gemini-2.5-pro-preview-tts-2025-05-19",
              "displayName": "Gemini 2.5 Pro Preview TTS",
              "description": "Gemini 2.5 Pro Preview TTS",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 16384,
              "supportedGenerationMethods": [
                "countTokens",
                "generateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/learnlm-2.0-flash-experimental",
              "version": "2.0",
              "displayName": "LearnLM 2.0 Flash Experimental",
              "description": "LearnLM 2.0 Flash Experimental",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 32768,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/gemma-3-1b-it",
              "version": "001",
              "displayName": "Gemma 3 1B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-4b-it",
              "version": "001",
              "displayName": "Gemma 3 4B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-12b-it",
              "version": "001",
              "displayName": "Gemma 3 12B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-27b-it",
              "version": "001",
              "displayName": "Gemma 3 27B",
              "inputTokenLimit": 131072,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3n-e4b-it",
              "version": "001",
              "displayName": "Gemma 3n E4B",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 2048,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3n-e2b-it",
              "version": "001",
              "displayName": "Gemma 3n E2B",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 2048,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemini-2.5-flash-lite",
              "version": "001",
              "displayName": "Gemini 2.5 Flash-Lite",
              "description": "Stable verion of Gemini 2.5 Flash-Lite, released in July of 2025",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/embedding-001",
              "version": "001",
              "displayName": "Embedding 001",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent"
              ]
            },
            {
              "name": "models/text-embedding-004",
              "version": "004",
              "displayName": "Text Embedding 004",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent"
              ]
            },
            {
              "name": "models/gemini-embedding-exp-03-07",
              "version": "exp-03-07",
              "displayName": "Gemini Embedding Experimental 03-07",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/gemini-embedding-exp",
              "version": "exp-03-07",
              "displayName": "Gemini Embedding Experimental",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/gemini-embedding-001",
              "version": "001",
              "displayName": "Gemini Embedding 001",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/aqa",
              "version": "001",
              "displayName": "Model that performs Attributed Question Answering.",
              "description": "Model trained to return answers to questions that are grounded in provided sources, along with estimating answerable probability.",
              "inputTokenLimit": 7168,
              "outputTokenLimit": 1024,
              "supportedGenerationMethods": [
                "generateAnswer"
              ],
              "temperature": 0.2,
              "topP": 1,
              "topK": 40
            },
            {
              "name": "models/imagen-3.0-generate-002",
              "version": "002",
              "displayName": "Imagen 3.0",
              "description": "Vertex served Imagen 3.0 002 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-generate-preview-06-06",
              "version": "01",
              "displayName": "Imagen 4 (Preview)",
              "description": "Vertex served Imagen 4.0 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-ultra-generate-preview-06-06",
              "version": "01",
              "displayName": "Imagen 4 Ultra (Preview)",
              "description": "Vertex served Imagen 4.0 ultra model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-generate-001",
              "version": "001",
              "displayName": "Imagen 4",
              "description": "Vertex served Imagen 4.0 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            }
          ],
          "nextPageToken": "Ch5tb2RlbHMvaW1hZ2VuLTQuMC1nZW5lcmF0ZS0wMDE="
        }
  recorded_at: Wed, 20 Aug 2025 17:14:15 GMT
- request:
    method: get
    uri: https://api.mistral.ai/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <MISTRAL_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:15 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Mistral-Correlation-Id:
      - '0198c879-6501-74e5-9ff9-1c01da0e814a'
      X-Kong-Request-Id:
      - '0198c879-6501-74e5-9ff9-1c01da0e814a'
      X-Envoy-Upstream-Service-Time:
      - '53'
      Access-Control-Allow-Origin:
      - "*"
      X-Kong-Upstream-Latency:
      - '54'
      X-Kong-Proxy-Latency:
      - '10'
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      - "<COOKIE>"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"object":"list","data":[{"id":"mistral-medium-2505","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2505","description":"Our
        frontier-class multimodal model released May 2025.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-large-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":null,"description":"Official
        None Mistral AI model","max_context_length":262144,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium-2508","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":262144,"aliases":["mistral-medium-latest","mistral-medium"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":262144,"aliases":["mistral-medium-2508","mistral-medium"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":262144,"aliases":["mistral-medium-2508","mistral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"ministral-3b-2410","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":false,"audio":false},"name":"ministral-3b-2410","description":"Official
        ministral-3b-2410 Mistral AI model","max_context_length":32768,"aliases":["ministral-3b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"ministral-3b-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":false,"audio":false},"name":"ministral-3b-2410","description":"Official
        ministral-3b-2410 Mistral AI model","max_context_length":32768,"aliases":["ministral-3b-2410"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"ministral-8b-2410","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"ministral-8b-2410","description":"Powerful
        edge model with extremely high performance/price ratio.","max_context_length":131072,"aliases":["ministral-8b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"ministral-8b-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"ministral-8b-2410","description":"Powerful
        edge model with extremely high performance/price ratio.","max_context_length":131072,"aliases":["ministral-8b-2410"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mistral-7b","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["mistral-tiny","mistral-tiny-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-tiny","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["open-mistral-7b","mistral-tiny-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-tiny-2312","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["open-mistral-7b","mistral-tiny"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mistral-nemo","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo-2407","mistral-tiny-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mistral-nemo-2407","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","mistral-tiny-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-tiny-2407","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","open-mistral-nemo-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-tiny-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","open-mistral-nemo-2407","mistral-tiny-2407"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mixtral-8x7b","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["mistral-small","mistral-small-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["open-mixtral-8x7b","mistral-small-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small-2312","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["open-mixtral-8x7b","mistral-small"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mixtral-8x22b","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x22b","description":"Our
        best open source model to date released April 2024. ","max_context_length":65536,"aliases":["open-mixtral-8x22b-2404"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mixtral-8x22b-2404","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x22b","description":"Our
        best open source model to date released April 2024. ","max_context_length":65536,"aliases":["open-mixtral-8x22b"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small-2409","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2409","description":"Our
        latest enterprise-grade small model with the latest version v2 released September
        2024. ","max_context_length":32768,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-2407","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-large-2407","description":"Our
        top-tier reasoning model for high-complexity tasks with the latest version
        v2 released July 2024.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-2411","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-large-2411","description":"Our
        top-tier reasoning model for high-complexity tasks with the lastest version
        released November 2024.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"pixtral-large-2411","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-latest","mistral-large-pixtral-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"pixtral-large-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-2411","mistral-large-pixtral-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-pixtral-2411","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-2411","pixtral-large-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"codestral-2501","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2412","codestral-2411-rc5"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2412","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2501","codestral-2411-rc5"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2411-rc5","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2501","codestral-2412"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2508","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2508","description":"Our
        cutting-edge language model for coding released August 2025.","max_context_length":256000,"aliases":["codestral-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2508","description":"Our
        cutting-edge language model for coding released August 2025.","max_context_length":256000,"aliases":["codestral-2508"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"devstral-small-2505","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2505","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-small-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2507","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":["devstral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-small-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2507","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":["devstral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-medium-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-medium-2507","description":"Our
        medium code-agentic model.","max_context_length":131072,"aliases":["devstral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-medium-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-medium-2507","description":"Our
        medium code-agentic model.","max_context_length":131072,"aliases":["devstral-medium-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"pixtral-12b-2409","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b","pixtral-12b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"pixtral-12b","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b-2409","pixtral-12b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"pixtral-12b-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b-2409","pixtral-12b"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2501","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2501","description":"Our
        latest enterprise-grade small model with the latest version released January
        2025. ","max_context_length":32768,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2503","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2503","description":"Our
        latest enterprise-grade small model with the latest version released March
        2025.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2506","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2506","description":"Our
        latest enterprise-grade small model with the latest version released June
        2025.","max_context_length":131072,"aliases":["mistral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2506","description":"Our
        latest enterprise-grade small model with the latest version released June
        2025.","max_context_length":131072,"aliases":["mistral-small-2506"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-saba-2502","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-saba-2502","description":"Official
        mistral-saba-2502 Mistral AI model","max_context_length":32768,"aliases":["mistral-saba-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-saba-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-saba-2502","description":"Official
        mistral-saba-2502 Mistral AI model","max_context_length":32768,"aliases":["mistral-saba-2502"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"magistral-medium-2506","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2506","description":"Our
        frontier-class reasoning model released June 2025.","max_context_length":40960,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-medium-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2507","description":"Our
        frontier-class reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-medium-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2507","description":"Our
        frontier-class reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-medium-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-2506","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2506","description":"Our
        efficient reasoning model released June 2025.","max_context_length":40000,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2507","description":"Our
        efficient reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2507","description":"Our
        efficient reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"voxtral-mini-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-mini-2507","description":"A
        mini audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-mini-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-mini-2507","description":"A
        mini audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-mini-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-small-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-small-2507","description":"A
        small audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-small-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-small-2507","description":"A
        small audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"mistral-embed","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-embed","description":"Official
        mistral-embed Mistral AI model","max_context_length":8192,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"codestral-embed","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-embed","description":"Official
        codestral-embed Mistral AI model","max_context_length":8192,"aliases":["codestral-embed-2505"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"codestral-embed-2505","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-embed","description":"Official
        codestral-embed Mistral AI model","max_context_length":8192,"aliases":["codestral-embed"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-moderation-2411","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":true,"audio":false},"name":"mistral-moderation-2411","description":"Official
        mistral-moderation-2411 Mistral AI model","max_context_length":8192,"aliases":["mistral-moderation-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-moderation-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":true,"audio":false},"name":"mistral-moderation-2411","description":"Official
        mistral-moderation-2411 Mistral AI model","max_context_length":8192,"aliases":["mistral-moderation-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-ocr-2503","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2503","description":"Official
        mistral-ocr-2503 Mistral AI model","max_context_length":16384,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"mistral-ocr-2505","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2505","description":"Official
        mistral-ocr-2505 Mistral AI model","max_context_length":16384,"aliases":["mistral-ocr-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"mistral-ocr-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2505","description":"Official
        mistral-ocr-2505 Mistral AI model","max_context_length":16384,"aliases":["mistral-ocr-2505"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-transcribe-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-2507","voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-2507","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-transcribe-2507","voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-latest","object":"model","created":1755710055,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-transcribe-2507","voxtral-mini-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"}]}'
  recorded_at: Wed, 20 Aug 2025 17:14:15 GMT
- request:
    method: get
    uri: https://api.openai.com/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:16 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Openai-Version:
      - '2020-10-01'
      X-Request-Id:
      - "<X_REQUEST_ID>"
      Openai-Processing-Ms:
      - '630'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      - "<COOKIE>"
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |-
        {
          "object": "list",
          "data": [
            {
              "id": "gpt-4-0613",
              "object": "model",
              "created": 1686588896,
              "owned_by": "openai"
            },
            {
              "id": "gpt-4",
              "object": "model",
              "created": 1687882411,
              "owned_by": "openai"
            },
            {
              "id": "gpt-3.5-turbo",
              "object": "model",
              "created": 1677610602,
              "owned_by": "openai"
            },
            {
              "id": "gpt-5-nano",
              "object": "model",
              "created": 1754426384,
              "owned_by": "system"
            },
            {
              "id": "gpt-5",
              "object": "model",
              "created": 1754425777,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-mini-2025-08-07",
              "object": "model",
              "created": 1754425867,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-mini",
              "object": "model",
              "created": 1754425928,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-nano-2025-08-07",
              "object": "model",
              "created": 1754426303,
              "owned_by": "system"
            },
            {
              "id": "davinci-002",
              "object": "model",
              "created": 1692634301,
              "owned_by": "system"
            },
            {
              "id": "babbage-002",
              "object": "model",
              "created": 1692634615,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-instruct",
              "object": "model",
              "created": 1692901427,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-instruct-0914",
              "object": "model",
              "created": 1694122472,
              "owned_by": "system"
            },
            {
              "id": "dall-e-3",
              "object": "model",
              "created": 1698785189,
              "owned_by": "system"
            },
            {
              "id": "dall-e-2",
              "object": "model",
              "created": 1698798177,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-1106-preview",
              "object": "model",
              "created": 1698957206,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-1106",
              "object": "model",
              "created": 1698959748,
              "owned_by": "system"
            },
            {
              "id": "tts-1-hd",
              "object": "model",
              "created": 1699046015,
              "owned_by": "system"
            },
            {
              "id": "tts-1-1106",
              "object": "model",
              "created": 1699053241,
              "owned_by": "system"
            },
            {
              "id": "tts-1-hd-1106",
              "object": "model",
              "created": 1699053533,
              "owned_by": "system"
            },
            {
              "id": "text-embedding-3-small",
              "object": "model",
              "created": 1705948997,
              "owned_by": "system"
            },
            {
              "id": "text-embedding-3-large",
              "object": "model",
              "created": 1705953180,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-0125-preview",
              "object": "model",
              "created": 1706037612,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo-preview",
              "object": "model",
              "created": 1706037777,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-0125",
              "object": "model",
              "created": 1706048358,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo",
              "object": "model",
              "created": 1712361441,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo-2024-04-09",
              "object": "model",
              "created": 1712601677,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o",
              "object": "model",
              "created": 1715367049,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-05-13",
              "object": "model",
              "created": 1715368132,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-2024-07-18",
              "object": "model",
              "created": 1721172717,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini",
              "object": "model",
              "created": 1721172741,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-08-06",
              "object": "model",
              "created": 1722814719,
              "owned_by": "system"
            },
            {
              "id": "chatgpt-4o-latest",
              "object": "model",
              "created": 1723515131,
              "owned_by": "system"
            },
            {
              "id": "o1-mini-2024-09-12",
              "object": "model",
              "created": 1725648979,
              "owned_by": "system"
            },
            {
              "id": "o1-mini",
              "object": "model",
              "created": 1725649008,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2024-10-01",
              "object": "model",
              "created": 1727131766,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2024-10-01",
              "object": "model",
              "created": 1727389042,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview",
              "object": "model",
              "created": 1727460443,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview",
              "object": "model",
              "created": 1727659998,
              "owned_by": "system"
            },
            {
              "id": "omni-moderation-latest",
              "object": "model",
              "created": 1731689265,
              "owned_by": "system"
            },
            {
              "id": "omni-moderation-2024-09-26",
              "object": "model",
              "created": 1732734466,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2024-12-17",
              "object": "model",
              "created": 1733945430,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2024-12-17",
              "object": "model",
              "created": 1734034239,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-realtime-preview-2024-12-17",
              "object": "model",
              "created": 1734112601,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-audio-preview-2024-12-17",
              "object": "model",
              "created": 1734115920,
              "owned_by": "system"
            },
            {
              "id": "o1-2024-12-17",
              "object": "model",
              "created": 1734326976,
              "owned_by": "system"
            },
            {
              "id": "o1",
              "object": "model",
              "created": 1734375816,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-realtime-preview",
              "object": "model",
              "created": 1734387380,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-audio-preview",
              "object": "model",
              "created": 1734387424,
              "owned_by": "system"
            },
            {
              "id": "o3-mini",
              "object": "model",
              "created": 1737146383,
              "owned_by": "system"
            },
            {
              "id": "o3-mini-2025-01-31",
              "object": "model",
              "created": 1738010200,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-11-20",
              "object": "model",
              "created": 1739331543,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-search-preview-2025-03-11",
              "object": "model",
              "created": 1741388170,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-search-preview",
              "object": "model",
              "created": 1741388720,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-search-preview-2025-03-11",
              "object": "model",
              "created": 1741390858,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-search-preview",
              "object": "model",
              "created": 1741391161,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-transcribe",
              "object": "model",
              "created": 1742068463,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-transcribe",
              "object": "model",
              "created": 1742068596,
              "owned_by": "system"
            },
            {
              "id": "o1-pro-2025-03-19",
              "object": "model",
              "created": 1742251504,
              "owned_by": "system"
            },
            {
              "id": "o1-pro",
              "object": "model",
              "created": 1742251791,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-tts",
              "object": "model",
              "created": 1742403959,
              "owned_by": "system"
            },
            {
              "id": "o3-2025-04-16",
              "object": "model",
              "created": 1744133301,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-2025-04-16",
              "object": "model",
              "created": 1744133506,
              "owned_by": "system"
            },
            {
              "id": "o3",
              "object": "model",
              "created": 1744225308,
              "owned_by": "system"
            },
            {
              "id": "o4-mini",
              "object": "model",
              "created": 1744225351,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-2025-04-14",
              "object": "model",
              "created": 1744315746,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1",
              "object": "model",
              "created": 1744316542,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-mini-2025-04-14",
              "object": "model",
              "created": 1744317547,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-mini",
              "object": "model",
              "created": 1744318173,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-nano-2025-04-14",
              "object": "model",
              "created": 1744321025,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-nano",
              "object": "model",
              "created": 1744321707,
              "owned_by": "system"
            },
            {
              "id": "gpt-image-1",
              "object": "model",
              "created": 1745517030,
              "owned_by": "system"
            },
            {
              "id": "codex-mini-latest",
              "object": "model",
              "created": 1746673257,
              "owned_by": "system"
            },
            {
              "id": "o3-pro",
              "object": "model",
              "created": 1748475349,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2025-06-03",
              "object": "model",
              "created": 1748907838,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2025-06-03",
              "object": "model",
              "created": 1748908498,
              "owned_by": "system"
            },
            {
              "id": "o3-pro-2025-06-10",
              "object": "model",
              "created": 1749166761,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-deep-research",
              "object": "model",
              "created": 1749685485,
              "owned_by": "system"
            },
            {
              "id": "o3-deep-research",
              "object": "model",
              "created": 1749840121,
              "owned_by": "system"
            },
            {
              "id": "o3-deep-research-2025-06-26",
              "object": "model",
              "created": 1750865219,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-deep-research-2025-06-26",
              "object": "model",
              "created": 1750866121,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-chat-latest",
              "object": "model",
              "created": 1754073306,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-2025-08-07",
              "object": "model",
              "created": 1754075360,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-16k",
              "object": "model",
              "created": 1683758102,
              "owned_by": "openai-internal"
            },
            {
              "id": "tts-1",
              "object": "model",
              "created": 1681940951,
              "owned_by": "openai-internal"
            },
            {
              "id": "whisper-1",
              "object": "model",
              "created": 1677532384,
              "owned_by": "openai-internal"
            },
            {
              "id": "text-embedding-ada-002",
              "object": "model",
              "created": 1671217299,
              "owned_by": "openai-internal"
            }
          ]
        }
  recorded_at: Wed, 20 Aug 2025 17:14:17 GMT
- request:
    method: get
    uri: https://openrouter.ai/api/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <OPENROUTER_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 20 Aug 2025 17:14:17 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding
      Permissions-Policy:
      - payment=(self "https://checkout.stripe.com" "https://connect-js.stripe.com"
        "https://js.stripe.com" "https://*.js.stripe.com" "https://hooks.stripe.com")
      Referrer-Policy:
      - no-referrer, strict-origin-when-cross-origin
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Aug 2025 17:14:17 GMT
- request:
    method: get
    uri: https://api.parsera.org/v1/llm-specs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      X-Cloud-Trace-Context:
      - 18cbaf234554426929835a78bb4b7299
      Date:
      - Wed, 20 Aug 2025 17:14:18 GMT
      Server:
      - Google Frontend
      Content-Length:
      - '61007'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Aug 2025 17:14:18 GMT
recorded_with: VCR 6.3.1
